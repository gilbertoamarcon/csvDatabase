(define (problem blocksworldprob) (:domain blocksworld)
  (:agents
    arm0 arm1 arm2 arm3 arm4 arm5 arm6 arm7 - arm
  )
  (:resources
    (arm0 friction - 1 encompass - 1 suction - 1)
    (arm1 encompass - 1 magnetic - 1 suction - 1)
    (arm2 encompass - 1 suction - 1)
    (arm3 friction - 1 suction - 1)
    (arm4 friction - 1 encompass - 1 magnetic - 1 suction - 1)
    (arm5 encompass - 1)
    (arm6 encompass - 1 magnetic - 1 suction - 1)
    (arm7 encompass - 1 suction - 1)
  )
  (:objects
    block1 block3 block4 block5 block6 block7 block10 block13 - single_block
    block0 block2 block8 block9 block11 block12 block14 - double_block
    friction encompass magnetic suction - effector
  )
  (:init

    (on_table block0)
    (requires block0 magnetic)
    (= (block_height block0) 0)
    (on_block block1 block0)
    (requires block1 suction)
    (= (block_height block1) 1)
    (clear block2)
    (on_block block2 block1)
    (requires block2 suction)
    (= (block_height block2) 2)
    (on_table block3)
    (requires block3 suction)
    (= (block_height block3) 0)
    (on_block block4 block3)
    (requires block4 friction)
    (= (block_height block4) 1)
    (clear block5)
    (on_block block5 block4)
    (requires block5 encompass)
    (= (block_height block5) 2)
    (on_table block6)
    (requires block6 encompass)
    (= (block_height block6) 0)
    (on_block block7 block6)
    (requires block7 magnetic)
    (= (block_height block7) 1)
    (clear block8)
    (on_block block8 block7)
    (requires block8 friction)
    (= (block_height block8) 2)
    (on_table block9)
    (requires block9 suction)
    (= (block_height block9) 0)
    (on_block block10 block9)
    (requires block10 encompass)
    (= (block_height block10) 1)
    (clear block11)
    (on_block block11 block10)
    (requires block11 encompass)
    (= (block_height block11) 2)
    (on_table block12)
    (requires block12 magnetic)
    (= (block_height block12) 0)
    (on_block block13 block12)
    (requires block13 encompass)
    (= (block_height block13) 1)
    (clear block14)
    (on_block block14 block13)
    (requires block14 friction)
    (= (block_height block14) 2)
    (= (max_on_table) 6)
    (= (num_on_table) 5)

    (empty arm0)
    (not_moving arm0)
    (has_effector arm0 friction)
    (has_effector arm0 encompass)
    (has_effector arm0 suction)
    (= (arm_height arm0) 3)
    (= (arm_id arm0) 0)
    (empty arm1)
    (not_moving arm1)
    (has_effector arm1 encompass)
    (has_effector arm1 magnetic)
    (has_effector arm1 suction)
    (= (arm_height arm1) 0)
    (= (arm_id arm1) 1)
    (empty arm2)
    (not_moving arm2)
    (has_effector arm2 encompass)
    (has_effector arm2 suction)
    (= (arm_height arm2) 0)
    (= (arm_id arm2) 2)
    (empty arm3)
    (not_moving arm3)
    (has_effector arm3 friction)
    (has_effector arm3 suction)
    (= (arm_height arm3) 2)
    (= (arm_id arm3) 3)
    (empty arm4)
    (not_moving arm4)
    (has_effector arm4 friction)
    (has_effector arm4 encompass)
    (has_effector arm4 magnetic)
    (has_effector arm4 suction)
    (= (arm_height arm4) 1)
    (= (arm_id arm4) 4)
    (empty arm5)
    (not_moving arm5)
    (has_effector arm5 encompass)
    (= (arm_height arm5) 3)
    (= (arm_id arm5) 5)
    (empty arm6)
    (not_moving arm6)
    (has_effector arm6 encompass)
    (has_effector arm6 magnetic)
    (has_effector arm6 suction)
    (= (arm_height arm6) 0)
    (= (arm_id arm6) 6)
    (empty arm7)
    (not_moving arm7)
    (has_effector arm7 encompass)
    (has_effector arm7 suction)
    (= (arm_height arm7) 1)
    (= (arm_id arm7) 7)
  )
  (:task t0
    :resources (
      friction - 2
      magnetic - 1
      suction - 2
    )
    :length 3
    :goal (and
      (on_table block14)
      (on_block block7 block14)
      (on_block block1 block7)
    )
  )
  (:task t1
    :resources (
      encompass - 2
      friction - 1
      suction - 1
    )
    :length 3
    :goal (and
      (on_table block3)
      (on_block block5 block3)
      (on_block block11 block5)
    )
  )
  (:task t2
    :resources (
      encompass - 1
      friction - 2
      magnetic - 2
      suction - 2
    )
    :length 3
    :goal (and
      (on_table block2)
      (on_block block12 block2)
      (on_block block6 block12)
    )
  )
  (:task t3
    :resources (
      encompass - 1
      friction - 2
      magnetic - 2
      suction - 2
    )
    :length 3
    :goal (and
      (on_table block8)
      (on_block block13 block8)
      (on_block block0 block13)
    )
  )
  (:task t4
    :resources (
      encompass - 2
      friction - 1
      suction - 2
    )
    :length 3
    :goal (and
      (on_table block10)
      (on_block block4 block10)
      (on_block block9 block4)
    )
  )
  (:metric minimize total-time)
)
