Parsing...
Contains quantified condition(s): False
Instantiating...
Duplicate arguments: Adding equality conditions.
Trivial rules: Converted to facts.
Starting instantiation [192 rules]...
Finding invariants...
Finding invariants... 18 initial candidates
[0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups...
Choosing groups...
306 uncovered facts (before using the results from the invariant synthesis)
306 uncovered facts
Building translation key...
Building STRIPS to SAS dictionary...
Translating task...
Processing axioms...
Found 0 axioms that are always true and 0 that are always false
constrained 88 conditions
Writing output...
Done!
contains_quantified_conditions: 0
Building causal graph...
The causal graph is not acyclic.
variable var15 is not necessary!
variable var16 is not necessary!
variable var17 is not necessary!
variable var18 is not necessary!
variable var19 is not necessary!
variable var20 is not necessary!
variable var21 is not necessary!
variable var22 is not necessary!
variable var23 is not necessary!
variable var24 is not necessary!
variable var25 is not necessary!
variable var26 is not necessary!
variable var27 is not necessary!
variable var28 is not necessary!
variable var29 is not necessary!
variable var30 is not necessary!
variable var31 is not necessary!
variable var32 is not necessary!
variable var307 is not necessary!
variable var308 is not necessary!
variable var326 is not necessary!
variable var332 is not necessary!
variable var333 is not necessary!
variable var334 is not necessary!
variable var336 is not necessary!
variable var337 is not necessary!
variable var338 is not necessary!
442 variables of 469 necessary
990 of 990 operators necessary.
0 of 0 Axiom_relational rules necessary.
130 of 137 Axiom_functional rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
all_operator_indices.size(): 990
Writing output...
printing SG 
442
done

Failed to match magic word 'begin_variables'.
Got ''.

Planner Paramters:
Anytime Search: Disabled
Timeout if plan was found: 0 seconds (no timeout)
Timeout while no plan was found: 0 seconds (no timeout)
Greedy Search: Disabled
Verbose: Enabled
Lazy Heuristic Evaluation: Enabled
Use caching in heuristic.
Cyclic CG heuristic: Enabled 	Preferred Operators: Enabled
Makespan heuristic: Disabled 	Preferred Operators: Disabled
No Heuristic: Disabled
Cg Heuristic Zero Cost Waiting Transitions: Enabled
Cg Heuristic Fire Waiting Transitions Only If Local Problems Matches State: Disabled
PrefOpsOrderedMode: Enabled with 1 goals
PrefOpsCheapestMode: Enabled with 1 goals
PrefOpsMostExpensiveMode: Disabled with 1000 goals
PrefOpsRandMode: Disabled with 1000 goals
PrefOpsConcurrentMode: Disabled
Reset after solution was found: Enabled
Reward only preferred operators queue: Disabled
GValues by: Timestamp
Queue management mode: Priority based
Known by logical state only filtering: Disabled
use_subgoals_to_break_makespan_ties: Disabled
Reschedule plans: Disabled
Epsilonize internally: Enabled
Epsilonize externally: Disabled
Keep original plans: Enabled
Plan name: "/home/gil/Documents/prob/iter_plan"
Plan monitor file: "" (no monitoring)
Monitoring verify timestamps: Disabled

Parsing...
Contains quantified condition(s): False
Instantiating...
Duplicate arguments: Adding equality conditions.
Trivial rules: Converted to facts.
Starting instantiation [192 rules]...
Finding invariants...
Finding invariants... 18 initial candidates
[0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Contains universal conditions: 0
Giving prior boost to open list 0
INIT
Open list sizes (priorities): 0 (-5000),  0 (0),  0 (0),  0 (0), 
Initializing cyclic causal graph heuristic...done.
Best heuristic values of queues: 24/-1/-1/-1 [expanded 1 state(s)]
Best heuristic values of queues: 22/-1/-1/-1 [expanded 7 state(s)]
Best heuristic values of queues: 21/-1/-1/-1 [expanded 22 state(s)]
Best heuristic values of queues: 19.98/-1/-1/-1 [expanded 43 state(s)]
Instantiating groups...
Choosing groups...
306 uncovered facts (before using the results from the invariant synthesis)
306 uncovered facts
Building translation key...
Building STRIPS to SAS dictionary...
Translating task...
Processing axioms...
Found 0 axioms that are always true and 0 that are always false
constrained 88 conditions
Writing output...
Done!
Best heuristic values of queues: 18.98/-1/-1/-1 [expanded 66 state(s)]
Best heuristic values of queues: 17.98/-1/-1/-1 [expanded 89 state(s)]
Best heuristic values of queues: 17/-1/-1/-1 [expanded 91 state(s)]
Best heuristic values of queues: 15/-1/-1/-1 [expanded 471 state(s)]
Best heuristic values of queues: 13.98/-1/-1/-1 [expanded 472 state(s)]
Best heuristic values of queues: 13/-1/-1/-1 [expanded 479 state(s)]
Best heuristic values of queues: 12.98/-1/-1/-1 [expanded 482 state(s)]
Best heuristic values of queues: 10.98/-1/-1/-1 [expanded 547 state(s)]
Best heuristic values of queues: 10/-1/-1/-1 [expanded 656 state(s)]
Best heuristic values of queues: 9/-1/-1/-1 [expanded 797 state(s)]
Best heuristic values of queues: 7.98/-1/-1/-1 [expanded 800 state(s)]
Best heuristic values of queues: 7/-1/-1/-1 [expanded 801 state(s)]
Best heuristic values of queues: 6/-1/-1/-1 [expanded 1080 state(s)]
Best heuristic values of queues: 5/-1/-1/-1 [expanded 1612 state(s)]
Best heuristic values of queues: 4.98/-1/-1/-1 [expanded 1624 state(s)]
Best heuristic values of queues: 4/-1/-1/-1 [expanded 1625 state(s)]
Best heuristic values of queues: 2.98/-1/-1/-1 [expanded 1629 state(s)]
Best heuristic values of queues: 2/-1/-1/-1 [expanded 1630 state(s)]
Best heuristic values of queues: 1/-1/-1/-1 [expanded 1664 state(s)]
Best heuristic values of queues: 0/-1/-1/-1 [expanded 1666 state(s)]
New solution has been found.

Found new plan:
0.00000000: (move-up arm7) [1.00000000]
1.01000000: (move-up arm7) [1.00000000]
2.02000000: (pick-single-block-on-block arm7 block14 block13 suction) [1.00000000]
2.03000000: (move-up arm4) [1.00000000]
3.04000000: (pick-single-block-on-block arm4 block5 block4 encompass) [1.00000000]
4.05000000: (place-single-block-on-block arm4 block5 block13) [1.00000000]
5.06000000: (move-down arm4) [1.00000000]
6.07000000: (pick-single-block-on-block arm4 block4 block3 magnetic) [1.00000000]
7.08000000: (move-down-with-single-block arm7 block14) [1.00000000]
8.09000000: (place-single-block-on-block arm7 block14 block3) [1.00000000]
8.10000000: (move-down-with-single-block arm4 block4) [1.00000000]
9.11000000: (place-single-block-on-table arm4 block4) [1.00000000]
10.12000000: (move-up arm4) [1.00000000]
11.13000000: (move-up arm7) [1.00000000]
12.14000000: (pick-single-block-on-block arm7 block2 block1 friction) [1.00000000]
12.15000000: (pick-single-block-on-block arm4 block14 block3 suction) [1.00000000]
13.16000000: (move-up-with-single-block arm4 block14) [1.00000000]
14.17000000: (place-single-block-on-block arm4 block14 block1) [1.00000000]
15.18000000: (move-up-with-single-block arm7 block2) [1.00000000]
15.19000000: (pick-single-block-on-block arm4 block14 block1 suction) [1.00000000]
16.20000000: (move-down-with-single-block arm4 block14) [1.00000000]
16.21000000: (place-single-block-on-block arm7 block2 block11) [1.00000000]
17.22000000: (place-single-block-on-block arm4 block14 block4) [1.00000000]
18.23000000: (pick-single-block-on-block arm7 block2 block11 friction) [1.00000000]
18.24000000: (move-up arm4) [1.00000000]
19.25000000: (pick-single-block-on-block arm4 block8 block7 encompass) [1.00000000]
19.26000000: (move-down-with-single-block arm7 block2) [1.00000000]
20.27000000: (place-single-block-on-block arm4 block8 block1) [1.00000000]
20.28000000: (place-single-block-on-block arm7 block2 block14) [1.00000000]
21.29000000: (pick-double-block-on-block arm7 arm4 block11 block10 friction) [2.00000000]
23.30000000: (move-down-with-double-block arm7 arm4 block11) [1.00000000]
24.31000000: (place-double-block-on-block arm7 arm4 block11 block3) [2.00000000]
26.32000000: (pick-single-block-on-block arm4 block10 block9 encompass) [1.00000000]
27.33000000: (move-up-with-single-block arm4 block10) [1.00000000]
28.34000000: (place-single-block-on-block arm4 block10 block7) [1.00000000]
Solution with original makespan 29.34 found (ignoring no-moving-targets-rule).
Plan length: 35 step(s).
Makespan   : 29.34
Makespan   : 29.34
Search time: 1.84 seconds - Walltime: 1.83799 seconds
Total time: 1.91 seconds - Walltime: 1.91702 seconds

Planner Paramters:
Anytime Search: Disabled
Timeout if plan was found: 0 seconds (no timeout)
Timeout while no plan was found: 0 seconds (no timeout)
Greedy Search: Disabled
Verbose: Enabled
Lazy Heuristic Evaluation: Enabled
Use caching in heuristic.
Cyclic CG heuristic: Enabled 	Preferred Operators: Enabled
Makespan heuristic: Disabled 	Preferred Operators: Disabled
No Heuristic: Disabled
Cg Heuristic Zero Cost Waiting Transitions: Enabled
Cg Heuristic Fire Waiting Transitions Only If Local Problems Matches State: Disabled
PrefOpsOrderedMode: Enabled with 1 goals
PrefOpsCheapestMode: Enabled with 1 goals
PrefOpsMostExpensiveMode: Disabled with 1000 goals
PrefOpsRandMode: Disabled with 1000 goals
PrefOpsConcurrentMode: Disabled
Reset after solution was found: Enabled
Reward only preferred operators queue: Disabled
GValues by: Timestamp
Queue management mode: Priority based
Known by logical state only filtering: Disabled
use_subgoals_to_break_makespan_ties: Disabled
Reschedule plans: Disabled
Epsilonize internally: Enabled
Epsilonize externally: Disabled
Keep original plans: Enabled
Plan name: "/home/gil/Documents/prob/iter_plan"
Plan monitor file: "" (no monitoring)
Monitoring verify timestamps: Disabled

Failed to match magic word 'begin_variables'.
Got ''.
('/home/gil/dev/tfd/downward/translate/translate.py', '/home/gil/Documents/prob/domain.pddl', '/home/gil/Documents/prob/iter_prob_filtered.pddl') {}
('/home/gil/dev/tfd/downward/preprocess/preprocess',) {'stdin': <open file 'output.sas', mode 'r' at 0x7f7f7e9ed9c0>}
('/home/gil/dev/tfd/downward/search/search', 'y+Y+e+O+1+C+1+b', 'p', '/home/gil/Documents/prob/iter_plan', 'F', '/home/gil/Documents/prob/res/planning_t0__t1') {'stdin': <open file 'output', mode 'r' at 0x7f7f7e9ed9c0>}
