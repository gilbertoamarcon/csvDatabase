(define (problem blocksworldprob)
(:domain blocksworld)
(:objects arm0 arm2 arm3 - arm
block6 block8 - double_block
encompass friction magnetic suction - effector
block0 block1 block2 block3 block4 block5 block7 - single_block
)
(:init (requires block2 encompass)
(requires block5 suction)
(clear block1)
(requires block8 encompass)
(clear block4)
(requires block4 friction)
(clear block3)
(requires block3 friction)
(clear block7)
(requires block7 suction)
(requires block6 suction)
(requires block0 encompass)
(on_block block1 block0)
(requires block1 suction)
(has_effector arm0 friction)
(empty arm0)
(not_moving arm0)
(empty arm2)
(not_moving arm2)
(empty arm3)
(not_moving arm3)
(has_effector arm2 suction)
(has_effector arm0 suction)
(on_table block0)
(has_effector arm0 encompass)
(has_effector arm0 magnetic)
(has_effector arm3 friction)
(has_effector arm3 magnetic)
(has_effector arm3 suction)
(on_table block4)
(on_table block2)
(on_block block6 block2)
(on_block block3 block6)
(on_table block8)
(on_block block5 block8)
(on_block block7 block5)
(=(block_height block1) 1.0000)
(=(block_height block0) 0.0000)
(=(block_height block2) 0.0000)
(=(block_height block3) 2.0000)
(=(block_height block4) 0.0000)
(=(block_height block5) 1.0000)
(=(block_height block6) 1.0000)
(=(block_height block7) 2.0000)
(=(block_height block8) 0.0000)
(=(max_on_table) 4.0000)
(=(num_on_table) 4.0000)
(=(arm_height arm0) 2.0000)
(=(arm_id arm0) 0.0000)
(=(arm_height arm2) 1.0000)
(=(arm_id arm2) 2.0000)
(=(arm_height arm3) 1.0000)
(=(arm_id arm3) 3.0000))
(:goal (and 
(on_block block0 block1)
(on_block block3 block6)
(on_block block4 block0)
(on_block block5 block8)
(on_block block6 block2)
(on_block block7 block5)
(on_table block1)
(on_table block2)
(on_table block8)
)
)
)