Parsing...
Contains quantified condition(s): False
Instantiating...
Duplicate arguments: Adding equality conditions.
Trivial rules: Converted to facts.
Starting instantiation [208 rules]...
Finding invariants...
Finding invariants... 18 initial candidates
[0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups...
Choosing groups...
216 uncovered facts (before using the results from the invariant synthesis)
216 uncovered facts
Building translation key...
Building STRIPS to SAS dictionary...
Translating task...
Processing axioms...
Found 0 axioms that are always true and 0 that are always false
constrained 84 conditions
Writing output...
Done!
contains_quantified_conditions: 0
Building causal graph...
The causal graph is not acyclic.
variable var12 is not necessary!
variable var13 is not necessary!
variable var14 is not necessary!
variable var15 is not necessary!
variable var16 is not necessary!
variable var17 is not necessary!
variable var18 is not necessary!
variable var19 is not necessary!
variable var20 is not necessary!
variable var21 is not necessary!
variable var22 is not necessary!
variable var23 is not necessary!
variable var24 is not necessary!
variable var25 is not necessary!
variable var26 is not necessary!
variable var217 is not necessary!
variable var218 is not necessary!
variable var219 is not necessary!
variable var220 is not necessary!
variable var221 is not necessary!
variable var222 is not necessary!
variable var223 is not necessary!
variable var224 is not necessary!
variable var226 is not necessary!
variable var227 is not necessary!
variable var230 is not necessary!
variable var244 is not necessary!
variable var249 is not necessary!
variable var294 is not necessary!
variable var295 is not necessary!
variable var296 is not necessary!
variable var298 is not necessary!
variable var299 is not necessary!
variable var300 is not necessary!
variable var302 is not necessary!
variable var303 is not necessary!
variable var304 is not necessary!
variable var305 is not necessary!
344 variables of 382 necessary
788 of 788 operators necessary.
1 of 1 Axiom_relational rules necessary.
123 of 145 Axiom_functional rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
all_operator_indices.size(): 788
Writing output...
printing SG 
344
done

Failed to match magic word 'begin_variables'.
Got ''.

Planner Paramters:
Anytime Search: Disabled
Timeout if plan was found: 0 seconds (no timeout)
Timeout while no plan was found: 0 seconds (no timeout)
Greedy Search: Disabled
Verbose: Enabled
Lazy Heuristic Evaluation: Enabled
Use caching in heuristic.
Cyclic CG heuristic: Enabled 	Preferred Operators: Enabled
Makespan heuristic: Disabled 	Preferred Operators: Disabled
No Heuristic: Disabled
Cg Heuristic Zero Cost Waiting Transitions: Enabled
Cg Heuristic Fire Waiting Transitions Only If Local Problems Matches State: Disabled
PrefOpsOrderedMode: Enabled with 1 goals
PrefOpsCheapestMode: Enabled with 1 goals
PrefOpsMostExpensiveMode: Disabled with 1000 goals
PrefOpsRandMode: Disabled with 1000 goals
PrefOpsConcurrentMode: Disabled
Reset after solution was found: Enabled
Reward only preferred operators queue: Disabled
GValues by: Timestamp
Queue management mode: Priority based
Known by logical state only filtering: Disabled
use_subgoals_to_break_makespan_ties: Disabled
Reschedule plans: Disabled
Epsilonize internally: Enabled
Epsilonize externally: Disabled
Keep original plans: Enabled
Plan name: "/home/gil/Documents/prob/iter_plan"
Plan monitor file: "" (no monitoring)
Monitoring verify timestamps: Disabled

Parsing...
Contains quantified condition(s): False
Instantiating...
Duplicate arguments: Adding equality conditions.
Trivial rules: Converted to facts.
Starting instantiation [208 rules]...
Finding invariants...
Finding invariants... 18 initial candidates
[0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Contains universal conditions: 0
Giving prior boost to open list 0
INIT
Open list sizes (priorities): 0 (-5000),  0 (0),  0 (0),  0 (0), 
Initializing cyclic causal graph heuristic...done.
Best heuristic values of queues: 65/-1/-1/-1 [expanded 1 state(s)]
Best heuristic values of queues: 63/-1/-1/-1 [expanded 8 state(s)]
Best heuristic values of queues: 62/-1/-1/-1 [expanded 19 state(s)]
Best heuristic values of queues: 61.98/-1/-1/-1 [expanded 20 state(s)]
Best heuristic values of queues: 60/-1/-1/-1 [expanded 27 state(s)]
Instantiating groups...
Choosing groups...
216 uncovered facts (before using the results from the invariant synthesis)
216 uncovered facts
Building translation key...
Building STRIPS to SAS dictionary...
Translating task...
Processing axioms...
Found 0 axioms that are always true and 0 that are always false
constrained 84 conditions
Writing output...
Done!
Best heuristic values of queues: 59.98/-1/-1/-1 [expanded 341 state(s)]
Best heuristic values of queues: 57/-1/-1/-1 [expanded 357 state(s)]
Best heuristic values of queues: 55.98/-1/-1/-1 [expanded 894 state(s)]
Best heuristic values of queues: 51/-1/-1/-1 [expanded 1269 state(s)]
Best heuristic values of queues: 50.98/-1/-1/-1 [expanded 1479 state(s)]
Best heuristic values of queues: 50/-1/-1/-1 [expanded 3226 state(s)]
Best heuristic values of queues: 49.98/-1/-1/-1 [expanded 3260 state(s)]
Best heuristic values of queues: 48.98/-1/-1/-1 [expanded 3308 state(s)]
Best heuristic values of queues: 46.98/-1/-1/-1 [expanded 3340 state(s)]
Best heuristic values of queues: 45.98/-1/-1/-1 [expanded 4707 state(s)]
Best heuristic values of queues: 45/-1/-1/-1 [expanded 4718 state(s)]
Best heuristic values of queues: 40/-1/-1/-1 [expanded 4728 state(s)]
Best heuristic values of queues: 39.98/-1/-1/-1 [expanded 6483 state(s)]
Best heuristic values of queues: 38/-1/-1/-1 [expanded 6885 state(s)]
Best heuristic values of queues: 25.98/-1/-1/-1 [expanded 9544 state(s)]
Best heuristic values of queues: 24/-1/-1/-1 [expanded 9545 state(s)]
Best heuristic values of queues: 22.98/-1/-1/-1 [expanded 9546 state(s)]
Best heuristic values of queues: 22/-1/-1/-1 [expanded 9549 state(s)]
Best heuristic values of queues: 21/-1/-1/-1 [expanded 9568 state(s)]
Best heuristic values of queues: 20.98/-1/-1/-1 [expanded 9579 state(s)]
Best heuristic values of queues: 19/-1/-1/-1 [expanded 9948 state(s)]
Best heuristic values of queues: 17.98/-1/-1/-1 [expanded 10038 state(s)]
Best heuristic values of queues: 15.98/-1/-1/-1 [expanded 10040 state(s)]
Best heuristic values of queues: 13/-1/-1/-1 [expanded 10485 state(s)]
Best heuristic values of queues: 12.98/-1/-1/-1 [expanded 10487 state(s)]
Best heuristic values of queues: 11.98/-1/-1/-1 [expanded 10488 state(s)]
Best heuristic values of queues: 11/-1/-1/-1 [expanded 10515 state(s)]
Best heuristic values of queues: 10/-1/-1/-1 [expanded 10520 state(s)]
Best heuristic values of queues: 7/-1/-1/-1 [expanded 10523 state(s)]
Best heuristic values of queues: 6.98/-1/-1/-1 [expanded 10635 state(s)]
Best heuristic values of queues: 6/-1/-1/-1 [expanded 10644 state(s)]
Best heuristic values of queues: 3.98/-1/-1/-1 [expanded 10645 state(s)]
Best heuristic values of queues: 3/-1/-1/-1 [expanded 10646 state(s)]
Best heuristic values of queues: 1/-1/-1/-1 [expanded 10650 state(s)]
Best heuristic values of queues: 0/-1/-1/-1 [expanded 10652 state(s)]
New solution has been found.

Found new plan:
0.00000000: (move-up arm5) [1.00000000]
0.01000000: (move-up arm4) [1.00000000]
1.02000000: (move-up arm5) [1.00000000]
1.03000000: (pick-single-block-on-block arm4 block2 block1 encompass) [1.00000000]
2.04000000: (move-down-with-single-block arm4 block2) [1.00000000]
3.05000000: (move-down-with-single-block arm4 block2) [1.00000000]
3.06000000: (move-down arm5) [1.00000000]
4.07000000: (place-single-block-on-table arm4 block2) [1.00000000]
4.08000000: (pick-single-block-on-block arm5 block5 block4 friction) [1.00000000]
5.09000000: (move-down-with-single-block arm5 block5) [1.00000000]
6.10000000: (place-single-block-on-block arm5 block5 block2) [1.00000000]
6.11000000: (move-up arm4) [1.00000000]
7.12000000: (move-up arm5) [1.00000000]
7.13000000: (pick-single-block-on-block arm4 block1 block0 suction) [1.00000000]
8.14000000: (move-up-with-single-block arm4 block1) [1.00000000]
8.15000000: (move-down arm5) [1.00000000]
9.16000000: (place-single-block-on-block arm4 block1 block4) [1.00000000]
10.17000000: (pick-single-block-on-block arm5 block5 block2 friction) [1.00000000]
11.18000000: (move-up arm4) [1.00000000]
11.19000000: (place-single-block-on-block arm5 block5 block0) [1.00000000]
12.20000000: (move-down arm5) [1.00000000]
13.21000000: (pick-single-block-on-table arm5 block2 encompass) [1.00000000]
14.22000000: (move-up-with-single-block arm5 block2) [1.00000000]
15.23000000: (move-down arm4) [1.00000000]
15.24000000: (move-up-with-single-block arm5 block2) [1.00000000]
16.25000000: (place-single-block-on-block arm5 block2 block5) [1.00000000]
16.26000000: (pick-single-block-on-block arm4 block1 block4 suction) [1.00000000]
17.27000000: (move-down arm5) [1.00000000]
17.28000000: (move-down-with-single-block arm4 block1) [1.00000000]
18.29000000: (move-down arm5) [1.00000000]
18.30000000: (move-down-with-single-block arm4 block1) [1.00000000]
19.31000000: (place-single-block-on-table arm4 block1) [1.00000000]
20.32000000: (move-up arm4) [1.00000000]
21.33000000: (move-up arm4) [1.00000000]
21.34000000: (move-up arm5) [1.00000000]
22.35000000: (pick-single-block-on-block arm4 block8 block7 encompass) [1.00000000]
22.36000000: (move-up arm5) [1.00000000]
23.37000000: (place-single-block-on-block arm4 block8 block4) [1.00000000]
24.38000000: (pick-double-block-on-block arm5 arm4 block11 block10 magnetic) [2.00000000]
26.39000000: (move-down-with-double-block arm5 arm4 block11) [1.00000000]
27.40000000: (place-double-block-on-block arm5 arm4 block11 block1) [2.00000000]
29.41000000: (move-down arm5) [1.00000000]
29.42000000: (pick-single-block-on-block arm4 block10 block9 friction) [1.00000000]
30.43000000: (pick-single-block-on-table arm5 block9 magnetic) [1.00000000]
30.44000000: (move-up-with-single-block arm4 block10) [1.00000000]
31.45000000: (move-up-with-single-block arm5 block9) [1.00000000]
31.46000000: (place-single-block-on-block arm4 block10 block11) [1.00000000]
32.47000000: (move-up-with-single-block arm5 block9) [1.00000000]
33.48000000: (pick-single-block-on-block arm4 block2 block5 encompass) [1.00000000]
34.49000000: (place-single-block-on-block arm5 block9 block5) [1.00000000]
34.50000000: (move-down-with-single-block arm4 block2) [1.00000000]
35.51000000: (move-down-with-single-block arm4 block2) [1.00000000]
35.52000000: (pick-single-block-on-block arm5 block10 block11 friction) [1.00000000]
36.53000000: (move-down-with-single-block arm5 block10) [1.00000000]
36.54000000: (place-single-block-on-table arm4 block2) [1.00000000]
37.55000000: (place-single-block-on-block arm5 block10 block2) [1.00000000]
37.56000000: (move-up arm4) [1.00000000]
38.57000000: (pick-double-block-on-block arm5 arm4 block7 block6 encompass) [2.00000000]
40.58000000: (move-up-with-double-block arm5 arm4 block7) [1.00000000]
41.59000000: (place-double-block-on-block arm5 arm4 block7 block10) [2.00000000]
43.60000000: (move-down arm4) [1.00000000]
43.61000000: (pick-single-block-on-block arm5 block9 block5 magnetic) [1.00000000]
44.62000000: (place-single-block-on-block arm5 block9 block5) [1.00000000]
44.63000000: (move-down arm4) [1.00000000]
45.64000000: (pick-single-block-on-table arm4 block6 friction) [1.00000000]
46.65000000: (move-up-with-single-block arm4 block6) [1.00000000]
47.66000000: (move-up-with-single-block arm4 block6) [1.00000000]
48.67000000: (place-single-block-on-block arm4 block6 block11) [1.00000000]
Solution with original makespan 49.67 found (ignoring no-moving-targets-rule).
Plan length: 68 step(s).
Makespan   : 49.67
Makespan   : 49.67
Search time: 7.27 seconds - Walltime: 7.31996 seconds
Total time: 7.34 seconds - Walltime: 7.3929 seconds

Planner Paramters:
Anytime Search: Disabled
Timeout if plan was found: 0 seconds (no timeout)
Timeout while no plan was found: 0 seconds (no timeout)
Greedy Search: Disabled
Verbose: Enabled
Lazy Heuristic Evaluation: Enabled
Use caching in heuristic.
Cyclic CG heuristic: Enabled 	Preferred Operators: Enabled
Makespan heuristic: Disabled 	Preferred Operators: Disabled
No Heuristic: Disabled
Cg Heuristic Zero Cost Waiting Transitions: Enabled
Cg Heuristic Fire Waiting Transitions Only If Local Problems Matches State: Disabled
PrefOpsOrderedMode: Enabled with 1 goals
PrefOpsCheapestMode: Enabled with 1 goals
PrefOpsMostExpensiveMode: Disabled with 1000 goals
PrefOpsRandMode: Disabled with 1000 goals
PrefOpsConcurrentMode: Disabled
Reset after solution was found: Enabled
Reward only preferred operators queue: Disabled
GValues by: Timestamp
Queue management mode: Priority based
Known by logical state only filtering: Disabled
use_subgoals_to_break_makespan_ties: Disabled
Reschedule plans: Disabled
Epsilonize internally: Enabled
Epsilonize externally: Disabled
Keep original plans: Enabled
Plan name: "/home/gil/Documents/prob/iter_plan"
Plan monitor file: "" (no monitoring)
Monitoring verify timestamps: Disabled

Failed to match magic word 'begin_variables'.
Got ''.
('/home/gil/dev/tfd/downward/translate/translate.py', '/home/gil/Documents/prob/domain.pddl', '/home/gil/Documents/prob/iter_prob_filtered.pddl') {}
('/home/gil/dev/tfd/downward/preprocess/preprocess',) {'stdin': <open file 'output.sas', mode 'r' at 0x7f2a69dcc9c0>}
('/home/gil/dev/tfd/downward/search/search', 'y+Y+e+O+1+C+1+b', 'p', '/home/gil/Documents/prob/iter_plan', 'F', '/home/gil/Documents/prob/res/planning_t0__t1') {'stdin': <open file 'output', mode 'r' at 0x7f2a69dcc9c0>}
