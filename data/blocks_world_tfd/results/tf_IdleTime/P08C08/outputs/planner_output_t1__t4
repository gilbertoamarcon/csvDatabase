Parsing...
Contains quantified condition(s): False
Instantiating...
Duplicate arguments: Adding equality conditions.
Trivial rules: Converted to facts.
Starting instantiation [192 rules]...
Finding invariants...
Finding invariants... 18 initial candidates
[0.000s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups...
Choosing groups...
250 uncovered facts (before using the results from the invariant synthesis)
250 uncovered facts
Building translation key...
Building STRIPS to SAS dictionary...
Translating task...
Processing axioms...
Found 0 axioms that are always true and 0 that are always false
constrained 128 conditions
Writing output...
Done!
contains_quantified_conditions: 0
Building causal graph...
The causal graph is not acyclic.
variable var14 is not necessary!
variable var15 is not necessary!
variable var16 is not necessary!
variable var17 is not necessary!
variable var18 is not necessary!
variable var19 is not necessary!
variable var20 is not necessary!
variable var21 is not necessary!
variable var22 is not necessary!
variable var23 is not necessary!
variable var24 is not necessary!
variable var25 is not necessary!
variable var26 is not necessary!
variable var27 is not necessary!
variable var28 is not necessary!
variable var29 is not necessary!
variable var30 is not necessary!
variable var31 is not necessary!
variable var32 is not necessary!
variable var33 is not necessary!
variable var236 is not necessary!
variable var239 is not necessary!
variable var251 is not necessary!
variable var252 is not necessary!
variable var253 is not necessary!
variable var254 is not necessary!
variable var258 is not necessary!
variable var260 is not necessary!
variable var263 is not necessary!
variable var266 is not necessary!
variable var267 is not necessary!
variable var269 is not necessary!
variable var270 is not necessary!
variable var273 is not necessary!
variable var275 is not necessary!
variable var276 is not necessary!
variable var277 is not necessary!
variable var281 is not necessary!
variable var283 is not necessary!
variable var284 is not necessary!
variable var288 is not necessary!
variable var290 is not necessary!
variable var293 is not necessary!
variable var296 is not necessary!
variable var297 is not necessary!
variable var299 is not necessary!
variable var300 is not necessary!
variable var301 is not necessary!
variable var302 is not necessary!
variable var303 is not necessary!
variable var304 is not necessary!
variable var305 is not necessary!
variable var306 is not necessary!
variable var307 is not necessary!
variable var309 is not necessary!
variable var310 is not necessary!
variable var311 is not necessary!
variable var313 is not necessary!
variable var321 is not necessary!
variable var336 is not necessary!
variable var351 is not necessary!
variable var366 is not necessary!
variable var381 is not necessary!
variable var393 is not necessary!
variable var405 is not necessary!
448 variables of 513 necessary
1256 of 1256 operators necessary.
0 of 0 Axiom_relational rules necessary.
195 of 233 Axiom_functional rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
all_operator_indices.size(): 1256
Writing output...
printing SG 
448
done

Failed to match magic word 'begin_variables'.
Got ''.

Planner Paramters:
Anytime Search: Disabled
Timeout if plan was found: 0 seconds (no timeout)
Timeout while no plan was found: 0 seconds (no timeout)
Greedy Search: Disabled
Verbose: Enabled
Lazy Heuristic Evaluation: Enabled
Use caching in heuristic.
Cyclic CG heuristic: Enabled 	Preferred Operators: Enabled
Makespan heuristic: Disabled 	Preferred Operators: Disabled
No Heuristic: Disabled
Cg Heuristic Zero Cost Waiting Transitions: Enabled
Cg Heuristic Fire Waiting Transitions Only If Local Problems Matches State: Disabled
PrefOpsOrderedMode: Enabled with 1 goals
PrefOpsCheapestMode: Enabled with 1 goals
PrefOpsMostExpensiveMode: Disabled with 1000 goals
PrefOpsRandMode: Disabled with 1000 goals
PrefOpsConcurrentMode: Disabled
Reset after solution was found: Enabled
Reward only preferred operators queue: Disabled
GValues by: Timestamp
Queue management mode: Priority based
Known by logical state only filtering: Disabled
use_subgoals_to_break_makespan_ties: Disabled
Reschedule plans: Disabled
Epsilonize internally: Enabled
Epsilonize externally: Disabled
Keep original plans: Enabled
Plan name: "/home/gil/Documents/prob/iter_plan"
Plan monitor file: "" (no monitoring)
Monitoring verify timestamps: Disabled

Parsing...
Contains quantified condition(s): False
Instantiating...
Duplicate arguments: Adding equality conditions.
Trivial rules: Converted to facts.
Starting instantiation [192 rules]...
Finding invariants...
Finding invariants... 18 initial candidates
[0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Contains universal conditions: 0
Giving prior boost to open list 0
INIT
Open list sizes (priorities): 0 (-5000),  0 (0),  0 (0),  0 (0), 
Initializing cyclic causal graph heuristic...done.
Best heuristic values of queues: 86/-1/-1/-1 [expanded 1 state(s)]
Best heuristic values of queues: 77/-1/-1/-1 [expanded 18 state(s)]
Best heuristic values of queues: 71/-1/-1/-1 [expanded 25 state(s)]
Best heuristic values of queues: 66/-1/-1/-1 [expanded 31 state(s)]
Instantiating groups...
Choosing groups...
250 uncovered facts (before using the results from the invariant synthesis)
250 uncovered facts
Building translation key...
Building STRIPS to SAS dictionary...
Translating task...
Processing axioms...
Found 0 axioms that are always true and 0 that are always false
constrained 128 conditions
Writing output...
Done!
Best heuristic values of queues: 65.98/-1/-1/-1 [expanded 85 state(s)]
Best heuristic values of queues: 65/-1/-1/-1 [expanded 176 state(s)]
Best heuristic values of queues: 63/-1/-1/-1 [expanded 186 state(s)]
Best heuristic values of queues: 61/-1/-1/-1 [expanded 208 state(s)]
Best heuristic values of queues: 59.98/-1/-1/-1 [expanded 326 state(s)]
Best heuristic values of queues: 51.97/-1/-1/-1 [expanded 327 state(s)]
Best heuristic values of queues: 50.98/-1/-1/-1 [expanded 356 state(s)]
Best heuristic values of queues: 48/-1/-1/-1 [expanded 366 state(s)]
Best heuristic values of queues: 46.98/-1/-1/-1 [expanded 367 state(s)]
Best heuristic values of queues: 45.98/-1/-1/-1 [expanded 437 state(s)]
Best heuristic values of queues: 44.98/-1/-1/-1 [expanded 445 state(s)]
Best heuristic values of queues: 43.98/-1/-1/-1 [expanded 655 state(s)]
Best heuristic values of queues: 41.98/-1/-1/-1 [expanded 707 state(s)]
Best heuristic values of queues: 40/-1/-1/-1 [expanded 708 state(s)]
Best heuristic values of queues: 35/-1/-1/-1 [expanded 712 state(s)]
Best heuristic values of queues: 32/-1/-1/-1 [expanded 720 state(s)]
Best heuristic values of queues: 31.98/-1/-1/-1 [expanded 730 state(s)]
Best heuristic values of queues: 27.98/-1/-1/-1 [expanded 734 state(s)]
Best heuristic values of queues: 26/-1/-1/-1 [expanded 735 state(s)]
Best heuristic values of queues: 24.98/-1/-1/-1 [expanded 777 state(s)]
Best heuristic values of queues: 21/-1/-1/-1 [expanded 787 state(s)]
Best heuristic values of queues: 19.98/-1/-1/-1 [expanded 790 state(s)]
Best heuristic values of queues: 19/-1/-1/-1 [expanded 791 state(s)]
Best heuristic values of queues: 18.98/-1/-1/-1 [expanded 1010 state(s)]
Best heuristic values of queues: 18/-1/-1/-1 [expanded 1011 state(s)]
Best heuristic values of queues: 17.98/-1/-1/-1 [expanded 1012 state(s)]
No progress since 1432, now at 6432
RESET!
Giving prior boost to open list 1
Open list sizes (priorities): 0 (0),  0 (-5000),  0 (0),  0 (0), 
Best heuristic values of queues: 86.98/-1/-1/-1 [expanded 1 state(s)]
Best heuristic values of queues: 86.98/92.98/-1/-1 [expanded 2 state(s)]
Best heuristic values of queues: 86.98/89.98/-1/-1 [expanded 4 state(s)]
Best heuristic values of queues: 86.98/77.98/-1/-1 [expanded 6 state(s)]
Best heuristic values of queues: 86.98/76/-1/-1 [expanded 11 state(s)]
Best heuristic values of queues: 86.98/72.98/-1/-1 [expanded 13 state(s)]
Best heuristic values of queues: 86.98/69/-1/-1 [expanded 18 state(s)]
Best heuristic values of queues: 86.98/65.98/-1/-1 [expanded 19 state(s)]
Best heuristic values of queues: 86.98/62.98/-1/-1 [expanded 111 state(s)]
Best heuristic values of queues: 86.98/61.97/-1/-1 [expanded 118 state(s)]
Best heuristic values of queues: 86.98/58.98/-1/-1 [expanded 121 state(s)]
Best heuristic values of queues: 86.98/57.98/-1/-1 [expanded 122 state(s)]
Best heuristic values of queues: 86.98/57/-1/-1 [expanded 194 state(s)]
Best heuristic values of queues: 86.98/56.98/-1/-1 [expanded 197 state(s)]
Best heuristic values of queues: 86.98/55.98/-1/-1 [expanded 201 state(s)]
Best heuristic values of queues: 86.98/55/-1/-1 [expanded 272 state(s)]
Best heuristic values of queues: 86.98/53/-1/-1 [expanded 414 state(s)]
Best heuristic values of queues: 86.98/51/-1/-1 [expanded 447 state(s)]
Best heuristic values of queues: 86.98/48/-1/-1 [expanded 508 state(s)]
Best heuristic values of queues: 86.98/46.98/-1/-1 [expanded 509 state(s)]
Best heuristic values of queues: 86.98/44/-1/-1 [expanded 540 state(s)]
Best heuristic values of queues: 86.98/42.98/-1/-1 [expanded 541 state(s)]
Best heuristic values of queues: 86.98/39/-1/-1 [expanded 544 state(s)]
Best heuristic values of queues: 86.98/34.98/-1/-1 [expanded 652 state(s)]
Best heuristic values of queues: 86.98/34/-1/-1 [expanded 655 state(s)]
Best heuristic values of queues: 86.98/24.98/-1/-1 [expanded 656 state(s)]
Best heuristic values of queues: 86.98/21.98/-1/-1 [expanded 658 state(s)]
Best heuristic values of queues: 86.98/19.98/-1/-1 [expanded 670 state(s)]
Best heuristic values of queues: 86.98/19/-1/-1 [expanded 716 state(s)]
Best heuristic values of queues: 86.98/16/-1/-1 [expanded 1054 state(s)]
Best heuristic values of queues: 86.98/15.98/-1/-1 [expanded 1057 state(s)]
Best heuristic values of queues: 86.98/14/-1/-1 [expanded 1089 state(s)]
Best heuristic values of queues: 86.98/13.97/-1/-1 [expanded 1093 state(s)]
Best heuristic values of queues: 86.98/13/-1/-1 [expanded 1096 state(s)]
Best heuristic values of queues: 86.98/12/-1/-1 [expanded 1644 state(s)]
Best heuristic values of queues: 86.98/10.98/-1/-1 [expanded 1649 state(s)]
Best heuristic values of queues: 86.98/10/-1/-1 [expanded 1650 state(s)]
Best heuristic values of queues: 86.98/9.98/-1/-1 [expanded 1652 state(s)]
Best heuristic values of queues: 86.98/8/-1/-1 [expanded 1653 state(s)]
Best heuristic values of queues: 86.98/7.98/-1/-1 [expanded 2297 state(s)]
Best heuristic values of queues: 86.98/7.97/-1/-1 [expanded 2298 state(s)]
Best heuristic values of queues: 86.98/6.97/-1/-1 [expanded 2299 state(s)]
Best heuristic values of queues: 86.98/6/-1/-1 [expanded 2347 state(s)]

Search Time: 10 sec.
Expanded Nodes: 7007 state(s).
Rate: 700.7 Nodes/s (over 10.0s) 700.7 Nodes/s (total average)
Generated Nodes: 88120 state(s).
Rate: 8812.0 Nodes/s (over 10.0s) 8812.0 Nodes/s (total average)
Overall branching factor by list sizes: 12.576
Averaged overall branching factor: Mean 12.58 Std: 4.61 (Num: 7007)
Branching factors by open list:
Open List 0: Mean 2.16 Std: 1.17 (Num: 7007)
Open List 1: Mean 1.96 Std: 1.00 (Num: 7007)
Open List 2: Mean 3.84 Std: 1.97 (Num: 7007)
Open List 3: Mean 4.62 Std: 1.89 (Num: 7007)
OpenList sizes: 7092 1313 10628 16019
Heuristic Computations (per heuristic): 10917 Total: 10917
Number of cache hits in heuristic (per heuristic): 5312 Total: 5312
Best heuristic values of queues: [0: 86.98] [1: 6] [2: -1] [3: -1]

Best heuristic values of queues: 86.98/5.98/-1/-1 [expanded 3770 state(s)]
Best heuristic values of queues: 86.98/4/-1/-1 [expanded 6196 state(s)]
Best heuristic values of queues: 86.98/2/-1/-1 [expanded 6767 state(s)]
Best heuristic values of queues: 86.98/0/-1/-1 [expanded 6769 state(s)]
New solution has been found.

Found new plan:
0.00000000: (move-up arm4) [1.00000000]
1.01000000: (move-up arm4) [1.00000000]
1.02000000: (move-down arm5) [1.00000000]
2.03000000: (move-up arm5) [1.00000000]
2.04000000: (move-down arm6) [1.00000000]
3.05000000: (pick-double-block-on-block arm6 arm4 block8 block4 friction) [2.00000000]
5.06000000: (place-double-block-on-block arm6 arm4 block8 block13) [2.00000000]
5.07000000: (move-down arm5) [1.00000000]
7.07000000: (move-up arm3) [1.00000000]
7.08000000: (move-up arm5) [1.00000000]
8.09000000: (move-up arm5) [1.00000000]
9.10000000: (move-up arm5) [1.00000000]
10.11000000: (pick-single-block-on-block arm5 block5 block2 encompass) [1.00000000]
11.12000000: (move-down-with-single-block arm5 block5) [1.00000000]
12.13000000: (move-down-with-single-block arm5 block5) [1.00000000]
12.14000000: (move-down arm6) [1.00000000]
13.15000000: (place-single-block-on-block arm5 block5 block4) [1.00000000]
14.16000000: (pick-single-block-on-block arm4 block5 block4 encompass) [1.00000000]
15.17000000: (pick-single-block-on-block arm6 block4 block3 friction) [1.00000000]
16.18000000: (move-down-with-single-block arm4 block5) [1.00000000]
17.19000000: (place-single-block-on-block arm4 block5 block3) [1.00000000]
18.20000000: (move-up arm4) [1.00000000]
18.21000000: (place-single-block-on-block arm6 block4 block0) [1.00000000]
18.22000000: (move-up arm5) [1.00000000]
19.23000000: (pick-double-block-on-block arm5 arm3 block2 block11 suction) [2.00000000]
21.24000000: (move-down-with-double-block arm5 arm3 block2) [1.00000000]
22.25000000: (place-double-block-on-block arm5 arm3 block2 block4) [2.00000000]
24.26000000: (pick-double-block-on-block arm5 arm4 block11 block10 encompass) [2.00000000]
26.27000000: (place-double-block-on-block arm5 arm4 block11 block5) [2.00000000]
28.28000000: (move-up arm6) [1.00000000]
29.29000000: (move-down arm4) [1.00000000]
30.30000000: (move-down arm6) [1.00000000]
31.31000000: (pick-single-block-on-block arm4 block10 block9 encompass) [1.00000000]
31.32000000: (move-up arm6) [1.00000000]
31.33000000: (move-down arm5) [1.00000000]
32.34000000: (move-down arm5) [1.00000000]
33.35000000: (move-down-with-single-block arm4 block10) [1.00000000]
33.36000000: (pick-single-block-on-table arm5 block6 encompass) [1.00000000]
34.37000000: (place-single-block-on-table arm4 block10) [1.00000000]
35.38000000: (move-down arm6) [1.00000000]
35.39000000: (move-up-with-single-block arm5 block6) [1.00000000]
36.40000000: (move-up-with-single-block arm5 block6) [1.00000000]
37.41000000: (move-up-with-single-block arm5 block6) [1.00000000]
38.42000000: (place-single-block-on-block arm5 block6 block1) [1.00000000]
39.43000000: (move-down arm5) [1.00000000]
40.44000000: (pick-double-block-on-block arm5 arm3 block2 block4 suction) [2.00000000]
42.45000000: (pick-single-block-on-block arm6 block4 block0 friction) [1.00000000]
43.46000000: (place-single-block-on-block arm6 block4 block10) [1.00000000]
44.47000000: (move-down-with-double-block arm5 arm3 block2) [1.00000000]
45.48000000: (place-double-block-on-block arm5 arm3 block2 block0) [2.00000000]
47.49000000: (move-up arm5) [1.00000000]
47.50000000: (move-up arm4) [1.00000000]
47.51000000: (move-up arm3) [1.00000000]
48.52000000: (move-up arm3) [1.00000000]
48.53000000: (move-up arm4) [1.00000000]
49.54000000: (move-down arm5) [1.00000000]
50.55000000: (move-down arm5) [1.00000000]
50.56000000: (pick-single-block-on-block arm3 block6 block1 encompass) [1.00000000]
51.57000000: (move-up arm5) [1.00000000]
51.58000000: (move-down-with-single-block arm3 block6) [1.00000000]
52.59000000: (place-single-block-on-block arm3 block6 block4) [1.00000000]
52.60000000: (move-down arm5) [1.00000000]
53.61000000: (move-down arm3) [1.00000000]
54.62000000: (move-down arm3) [1.00000000]
55.63000000: (pick-double-block-on-table arm5 arm3 block9 suction) [2.00000000]
57.64000000: (move-up-with-double-block arm5 arm3 block9) [1.00000000]
58.65000000: (pick-single-block-on-block arm4 block6 block4 encompass) [1.00000000]
58.66000000: (move-up-with-double-block arm5 arm3 block9) [1.00000000]
59.67000000: (place-double-block-on-block arm5 arm3 block9 block4) [2.00000000]
Solution with original makespan 61.67 found (ignoring no-moving-targets-rule).
Plan length: 69 step(s).
Makespan   : 61.67
Makespan   : 61.67
Search time: 14.37 seconds - Walltime: 14.3917 seconds
Total time: 14.43 seconds - Walltime: 14.4614 seconds

Planner Paramters:
Anytime Search: Disabled
Timeout if plan was found: 0 seconds (no timeout)
Timeout while no plan was found: 0 seconds (no timeout)
Greedy Search: Disabled
Verbose: Enabled
Lazy Heuristic Evaluation: Enabled
Use caching in heuristic.
Cyclic CG heuristic: Enabled 	Preferred Operators: Enabled
Makespan heuristic: Disabled 	Preferred Operators: Disabled
No Heuristic: Disabled
Cg Heuristic Zero Cost Waiting Transitions: Enabled
Cg Heuristic Fire Waiting Transitions Only If Local Problems Matches State: Disabled
PrefOpsOrderedMode: Enabled with 1 goals
PrefOpsCheapestMode: Enabled with 1 goals
PrefOpsMostExpensiveMode: Disabled with 1000 goals
PrefOpsRandMode: Disabled with 1000 goals
PrefOpsConcurrentMode: Disabled
Reset after solution was found: Enabled
Reward only preferred operators queue: Disabled
GValues by: Timestamp
Queue management mode: Priority based
Known by logical state only filtering: Disabled
use_subgoals_to_break_makespan_ties: Disabled
Reschedule plans: Disabled
Epsilonize internally: Enabled
Epsilonize externally: Disabled
Keep original plans: Enabled
Plan name: "/home/gil/Documents/prob/iter_plan"
Plan monitor file: "" (no monitoring)
Monitoring verify timestamps: Disabled

Failed to match magic word 'begin_variables'.
Got ''.
('/home/gil/dev/tfd/downward/translate/translate.py', '/home/gil/Documents/prob/domain.pddl', '/home/gil/Documents/prob/iter_prob_filtered.pddl') {}
('/home/gil/dev/tfd/downward/preprocess/preprocess',) {'stdin': <open file 'output.sas', mode 'r' at 0x7efc41eab9c0>}
('/home/gil/dev/tfd/downward/search/search', 'y+Y+e+O+1+C+1+b', 'p', '/home/gil/Documents/prob/iter_plan', 'F', '/home/gil/Documents/prob/res/planning_t1__t4') {'stdin': <open file 'output', mode 'r' at 0x7efc41eab9c0>}
