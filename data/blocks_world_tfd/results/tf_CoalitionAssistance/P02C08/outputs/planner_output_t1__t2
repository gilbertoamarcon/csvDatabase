Parsing...
Contains quantified condition(s): False
Instantiating...
Duplicate arguments: Adding equality conditions.
Trivial rules: Converted to facts.
Starting instantiation [192 rules]...
Finding invariants...
Finding invariants... 18 initial candidates
[0.000s CPU, 0.008s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups...
Choosing groups...
205 uncovered facts (before using the results from the invariant synthesis)
205 uncovered facts
Building translation key...
Building STRIPS to SAS dictionary...
Translating task...
Processing axioms...
Found 0 axioms that are always true and 0 that are always false
constrained 246 conditions
Writing output...
Done!
contains_quantified_conditions: 0
Building causal graph...
The causal graph is not acyclic.
variable var9 is not necessary!
variable var10 is not necessary!
variable var11 is not necessary!
variable var12 is not necessary!
variable var13 is not necessary!
variable var14 is not necessary!
variable var15 is not necessary!
variable var16 is not necessary!
variable var17 is not necessary!
variable var18 is not necessary!
variable var19 is not necessary!
variable var20 is not necessary!
variable var21 is not necessary!
variable var22 is not necessary!
variable var23 is not necessary!
variable var24 is not necessary!
variable var25 is not necessary!
variable var208 is not necessary!
variable var210 is not necessary!
variable var216 is not necessary!
variable var228 is not necessary!
variable var234 is not necessary!
variable var236 is not necessary!
variable var242 is not necessary!
variable var247 is not necessary!
variable var248 is not necessary!
variable var249 is not necessary!
variable var250 is not necessary!
variable var253 is not necessary!
variable var254 is not necessary!
variable var260 is not necessary!
variable var264 is not necessary!
variable var265 is not necessary!
variable var266 is not necessary!
variable var267 is not necessary!
variable var268 is not necessary!
variable var270 is not necessary!
variable var271 is not necessary!
variable var351 is not necessary!
464 variables of 503 necessary
1664 of 1664 operators necessary.
0 of 0 Axiom_relational rules necessary.
248 of 268 Axiom_functional rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
all_operator_indices.size(): 1664
Writing output...
printing SG 
464
done

Failed to match magic word 'begin_variables'.
Got ''.

Planner Paramters:
Anytime Search: Disabled
Timeout if plan was found: 0 seconds (no timeout)
Timeout while no plan was found: 0 seconds (no timeout)
Greedy Search: Disabled
Verbose: Enabled
Lazy Heuristic Evaluation: Enabled
Use caching in heuristic.
Cyclic CG heuristic: Enabled 	Preferred Operators: Enabled
Makespan heuristic: Disabled 	Preferred Operators: Disabled
No Heuristic: Disabled
Cg Heuristic Zero Cost Waiting Transitions: Enabled
Cg Heuristic Fire Waiting Transitions Only If Local Problems Matches State: Disabled
PrefOpsOrderedMode: Enabled with 1 goals
PrefOpsCheapestMode: Enabled with 1 goals
PrefOpsMostExpensiveMode: Disabled with 1000 goals
PrefOpsRandMode: Disabled with 1000 goals
PrefOpsConcurrentMode: Disabled
Reset after solution was found: Enabled
Reward only preferred operators queue: Disabled
GValues by: Timestamp
Queue management mode: Priority based
Known by logical state only filtering: Disabled
use_subgoals_to_break_makespan_ties: Disabled
Reschedule plans: Disabled
Epsilonize internally: Enabled
Epsilonize externally: Disabled
Keep original plans: Enabled
Plan name: "/home/gil/Documents/prob/iter_plan"
Plan monitor file: "" (no monitoring)
Monitoring verify timestamps: Disabled

Parsing...
Contains quantified condition(s): False
Instantiating...
Duplicate arguments: Adding equality conditions.
Trivial rules: Converted to facts.
Starting instantiation [192 rules]...
Finding invariants...
Finding invariants... 18 initial candidates
[0.020s CPU, 0.009s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Contains universal conditions: 0
Giving prior boost to open list 0
INIT
Open list sizes (priorities): 0 (-5000),  0 (0),  0 (0),  0 (0), 
Initializing cyclic causal graph heuristic...done.
Best heuristic values of queues: 30/-1/-1/-1 [expanded 1 state(s)]
Best heuristic values of queues: 29.98/-1/-1/-1 [expanded 11 state(s)]
Best heuristic values of queues: 29/-1/-1/-1 [expanded 13 state(s)]
Best heuristic values of queues: 28/-1/-1/-1 [expanded 69 state(s)]
Best heuristic values of queues: 27.98/-1/-1/-1 [expanded 70 state(s)]
Instantiating groups...
Choosing groups...
205 uncovered facts (before using the results from the invariant synthesis)
205 uncovered facts
Building translation key...
Building STRIPS to SAS dictionary...
Translating task...
Processing axioms...
Found 0 axioms that are always true and 0 that are always false
constrained 246 conditions
Writing output...
Done!
Best heuristic values of queues: 27/-1/-1/-1 [expanded 117 state(s)]
Best heuristic values of queues: 26/-1/-1/-1 [expanded 123 state(s)]
Best heuristic values of queues: 23.98/-1/-1/-1 [expanded 827 state(s)]
Best heuristic values of queues: 22.98/-1/-1/-1 [expanded 832 state(s)]
Best heuristic values of queues: 22/-1/-1/-1 [expanded 838 state(s)]
Best heuristic values of queues: 21/-1/-1/-1 [expanded 849 state(s)]
Best heuristic values of queues: 20/-1/-1/-1 [expanded 879 state(s)]

Search Time: 10 sec.
Expanded Nodes: 3999 state(s).
Rate: 399.9 Nodes/s (over 10.0s) 399.9 Nodes/s (total average)
Generated Nodes: 75017 state(s).
Rate: 7501.7 Nodes/s (over 10.0s) 7501.7 Nodes/s (total average)
Overall branching factor by list sizes: 18.7589
Averaged overall branching factor: Mean 18.76 Std: 5.14 (Num: 3999)
Branching factors by open list:
Open List 0: Mean 2.06 Std: 0.97 (Num: 3999)
Open List 1: Mean 1.66 Std: 0.54 (Num: 3999)
Open List 2: Mean 6.77 Std: 2.12 (Num: 3999)
Open List 3: Mean 8.27 Std: 2.95 (Num: 3999)
OpenList sizes: 2182 6620 27084 33083
Heuristic Computations (per heuristic): 5931 Total: 5931
Number of cache hits in heuristic (per heuristic): 2513 Total: 2513
Best heuristic values of queues: [0: 20] [1: -1] [2: -1] [3: -1]

No progress since 1263, now at 6263
RESET!
Giving prior boost to open list 1
Open list sizes (priorities): 0 (0),  0 (-5000),  0 (0),  0 (0), 
Best heuristic values of queues: 30.98/-1/-1/-1 [expanded 1 state(s)]
Best heuristic values of queues: 30.98/30.98/-1/-1 [expanded 2 state(s)]
Best heuristic values of queues: 30.98/30/-1/-1 [expanded 5 state(s)]
Best heuristic values of queues: 30.98/28.98/-1/-1 [expanded 13 state(s)]
Best heuristic values of queues: 29.98/28.98/-1/-1 [expanded 29 state(s)]
Best heuristic values of queues: 28.98/28.98/-1/-1 [expanded 46 state(s)]
Best heuristic values of queues: 28.98/28/-1/-1 [expanded 70 state(s)]
Best heuristic values of queues: 28.98/27.98/-1/-1 [expanded 301 state(s)]
Best heuristic values of queues: 27.98/27.98/-1/-1 [expanded 323 state(s)]
Best heuristic values of queues: 27.98/23.98/-1/-1 [expanded 898 state(s)]
Best heuristic values of queues: 27.98/22/-1/-1 [expanded 899 state(s)]
Best heuristic values of queues: 27.98/21.98/-1/-1 [expanded 901 state(s)]
Best heuristic values of queues: 27.98/21/-1/-1 [expanded 902 state(s)]
Best heuristic values of queues: 27.98/20/-1/-1 [expanded 906 state(s)]
Best heuristic values of queues: 27.98/19.98/-1/-1 [expanded 925 state(s)]
Best heuristic values of queues: 27.98/19/-1/-1 [expanded 1970 state(s)]
No progress since 3559, now at 8559
RESET!
Giving prior boost to open list 2
Open list sizes (priorities): 0 (0),  0 (0),  0 (-5000),  0 (0), 
Best heuristic values of queues: -1/30.98/-1/-1 [expanded 1 state(s)]
Best heuristic values of queues: -1/30.98/30.98/-1 [expanded 2 state(s)]
Best heuristic values of queues: -1/30.98/28/-1 [expanded 21 state(s)]
Best heuristic values of queues: -1/30.98/27.98/-1 [expanded 22 state(s)]
Best heuristic values of queues: -1/30.98/25.98/-1 [expanded 25 state(s)]
Best heuristic values of queues: -1/30.98/25.97/-1 [expanded 27 state(s)]
Best heuristic values of queues: -1/30.98/24.96/-1 [expanded 28 state(s)]
Best heuristic values of queues: -1/30.98/23.99/-1 [expanded 40 state(s)]
Best heuristic values of queues: -1/30.98/23.98/-1 [expanded 43 state(s)]
Best heuristic values of queues: -1/30.98/23/-1 [expanded 70 state(s)]
Best heuristic values of queues: -1/30.98/22.98/-1 [expanded 159 state(s)]
Best heuristic values of queues: -1/30.98/21.98/-1 [expanded 168 state(s)]
Best heuristic values of queues: -1/30.98/21/-1 [expanded 183 state(s)]
Best heuristic values of queues: -1/30.98/20/-1 [expanded 214 state(s)]
Best heuristic values of queues: -1/30.98/17.98/-1 [expanded 216 state(s)]
Best heuristic values of queues: -1/30.98/17/-1 [expanded 231 state(s)]
Best heuristic values of queues: -1/30.98/16.98/-1 [expanded 233 state(s)]
Best heuristic values of queues: -1/30.98/15.98/-1 [expanded 239 state(s)]
Best heuristic values of queues: -1/30.98/14.98/-1 [expanded 241 state(s)]
Best heuristic values of queues: -1/30.98/14/-1 [expanded 258 state(s)]
Best heuristic values of queues: -1/30.98/13.98/-1 [expanded 259 state(s)]
Best heuristic values of queues: -1/30.98/12/-1 [expanded 263 state(s)]
Best heuristic values of queues: -1/30.98/10.98/-1 [expanded 265 state(s)]
Best heuristic values of queues: -1/30.98/8/-1 [expanded 268 state(s)]
Best heuristic values of queues: -1/30.98/6.98/-1 [expanded 274 state(s)]
Best heuristic values of queues: -1/30.98/6/-1 [expanded 275 state(s)]
Best heuristic values of queues: -1/30.98/5.98/-1 [expanded 277 state(s)]
Best heuristic values of queues: -1/30.98/4.98/-1 [expanded 279 state(s)]
Best heuristic values of queues: -1/30.98/4/-1 [expanded 281 state(s)]

Search Time: 20 sec.
Expanded Nodes: 9087 state(s).
Rate: 508.8 Nodes/s (over 10.0s) 454.4 Nodes/s (total average)
Generated Nodes: 170230 state(s).
Rate: 9521.3 Nodes/s (over 10.0s) 8511.5 Nodes/s (total average)
Overall branching factor by list sizes: 18.7334
Averaged overall branching factor: Mean 18.73 Std: 5.48 (Num: 9087)
Branching factors by open list:
Open List 0: Mean 2.13 Std: 1.13 (Num: 9087)
Open List 1: Mean 1.73 Std: 0.78 (Num: 9087)
Open List 2: Mean 5.64 Std: 2.22 (Num: 9087)
Open List 3: Mean 9.22 Std: 3.29 (Num: 9087)
OpenList sizes: 961 736 1124 4687
Heuristic Computations (per heuristic): 14885 Total: 14885
Number of cache hits in heuristic (per heuristic): 8662 Total: 8662
Best heuristic values of queues: [0: -1] [1: 30.98] [2: 4] [3: -1]

Best heuristic values of queues: -1/30.98/2.98/-1 [expanded 486 state(s)]
Best heuristic values of queues: -1/30.98/2/-1 [expanded 488 state(s)]
Best heuristic values of queues: -1/30.98/1/-1 [expanded 489 state(s)]
Best heuristic values of queues: -1/30.98/0/-1 [expanded 491 state(s)]
New solution has been found.

Found new plan:
0.00000000: (move-up arm0) [1.00000000]
0.01000000: (pick-single-block-on-block arm3 block5 block4 suction) [1.00000000]
0.02000000: (move-up arm1) [1.00000000]
1.03000000: (move-down arm6) [1.00000000]
1.04000000: (pick-double-block-on-block arm5 arm1 block7 block8 encompass) [2.00000000]
3.05000000: (move-up arm2) [1.00000000]
3.06000000: (pick-single-block-on-block arm0 block4 block0 suction) [1.00000000]
4.07000000: (move-up arm6) [1.00000000]
4.08000000: (pick-single-block-on-block arm2 block8 block2 suction) [1.00000000]
5.09000000: (move-down arm6) [1.00000000]
5.10000000: (move-up-with-single-block arm2 block8) [1.00000000]
5.11000000: (move-down-with-double-block arm5 arm1 block7) [1.00000000]
6.12000000: (move-down-with-double-block arm5 arm1 block7) [1.00000000]
7.13000000: (place-double-block-on-table arm5 arm1 block7) [2.00000000]
7.14000000: (move-down-with-single-block arm3 block5) [1.00000000]
9.14000000: (move-up arm1) [1.00000000]
9.15000000: (move-down-with-single-block arm0 block4) [1.00000000]
10.16000000: (pick-single-block-on-table arm5 block2 suction) [1.00000000]
11.17000000: (place-single-block-on-table arm0 block4) [1.00000000]
12.18000000: (move-down arm1) [1.00000000]
12.19000000: (move-up-with-single-block arm5 block2) [1.00000000]
12.20000000: (place-single-block-on-block arm3 block5 block4) [1.00000000]
13.21000000: (place-single-block-on-block arm2 block8 block5) [1.00000000]
14.22000000: (pick-single-block-on-table arm0 block0 friction) [1.00000000]
15.23000000: (move-up-with-single-block arm0 block0) [1.00000000]
16.24000000: (place-single-block-on-block arm0 block0 block7) [1.00000000]
16.25000000: (move-up-with-single-block arm5 block2) [1.00000000]
17.26000000: (place-single-block-on-block arm5 block2 block0) [1.00000000]
Solution with original makespan 18.26 found (ignoring no-moving-targets-rule).
Plan length: 28 step(s).
Makespan   : 18.26
Makespan   : 18.26
Search time: 19.38 seconds - Walltime: 19.4195 seconds
Total time: 19.47 seconds - Walltime: 19.5141 seconds

Planner Paramters:
Anytime Search: Disabled
Timeout if plan was found: 0 seconds (no timeout)
Timeout while no plan was found: 0 seconds (no timeout)
Greedy Search: Disabled
Verbose: Enabled
Lazy Heuristic Evaluation: Enabled
Use caching in heuristic.
Cyclic CG heuristic: Enabled 	Preferred Operators: Enabled
Makespan heuristic: Disabled 	Preferred Operators: Disabled
No Heuristic: Disabled
Cg Heuristic Zero Cost Waiting Transitions: Enabled
Cg Heuristic Fire Waiting Transitions Only If Local Problems Matches State: Disabled
PrefOpsOrderedMode: Enabled with 1 goals
PrefOpsCheapestMode: Enabled with 1 goals
PrefOpsMostExpensiveMode: Disabled with 1000 goals
PrefOpsRandMode: Disabled with 1000 goals
PrefOpsConcurrentMode: Disabled
Reset after solution was found: Enabled
Reward only preferred operators queue: Disabled
GValues by: Timestamp
Queue management mode: Priority based
Known by logical state only filtering: Disabled
use_subgoals_to_break_makespan_ties: Disabled
Reschedule plans: Disabled
Epsilonize internally: Enabled
Epsilonize externally: Disabled
Keep original plans: Enabled
Plan name: "/home/gil/Documents/prob/iter_plan"
Plan monitor file: "" (no monitoring)
Monitoring verify timestamps: Disabled

Failed to match magic word 'begin_variables'.
Got ''.
('/home/gil/dev/tfd/downward/translate/translate.py', '/home/gil/Documents/prob/domain.pddl', '/home/gil/Documents/prob/iter_prob_filtered.pddl') {}
('/home/gil/dev/tfd/downward/preprocess/preprocess',) {'stdin': <open file 'output.sas', mode 'r' at 0x7f6d473239c0>}
('/home/gil/dev/tfd/downward/search/search', 'y+Y+e+O+1+C+1+b', 'p', '/home/gil/Documents/prob/iter_plan', 'F', '/home/gil/Documents/prob/res/planning_t1__t2') {'stdin': <open file 'output', mode 'r' at 0x7f6d473239c0>}
