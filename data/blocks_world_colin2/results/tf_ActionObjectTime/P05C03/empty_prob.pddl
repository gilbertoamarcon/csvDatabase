(define (problem blocksworldprob) (:domain blocksworld)
(:objects block0 block1 block2 block3 block4 block5 block7 - single_block
    block6 block8 - double_block
    friction encompass magnetic suction - effector
arm0 arm1 arm2 arm3 arm4 - arm)

(:init

    (on_table block0)
    (requires block0 encompass)
    (= (block_height block0) 0)
    (on_block block1 block0)
    (requires block1 suction)
    (= (block_height block1) 1)
    (clear block2)
    (on_block block2 block1)
    (requires block2 encompass)
    (= (block_height block2) 2)
    (on_table block3)
    (requires block3 friction)
    (= (block_height block3) 0)
    (on_block block4 block3)
    (requires block4 friction)
    (= (block_height block4) 1)
    (clear block5)
    (on_block block5 block4)
    (requires block5 suction)
    (= (block_height block5) 2)
    (on_table block6)
    (requires block6 suction)
    (= (block_height block6) 0)
    (on_block block7 block6)
    (requires block7 suction)
    (= (block_height block7) 1)
    (clear block8)
    (on_block block8 block7)
    (requires block8 encompass)
    (= (block_height block8) 2)
    (= (max_on_table) 4)
    (= (num_on_table) 3)

    (empty arm0)
    (not_moving arm0)
    (has_effector arm0 friction)
    (has_effector arm0 encompass)
    (has_effector arm0 magnetic)
    (= (arm_height arm0) 2)
    (= (arm_id arm0) 0)
    (empty arm1)
    (not_moving arm1)
    (has_effector arm1 friction)
    (has_effector arm1 encompass)
    (has_effector arm1 magnetic)
    (= (arm_height arm1) 2)
    (= (arm_id arm1) 1)
    (empty arm2)
    (not_moving arm2)
    (has_effector arm2 encompass)
    (has_effector arm2 suction)
    (= (arm_height arm2) 0)
    (= (arm_id arm2) 2)
    (empty arm3)
    (not_moving arm3)
    (has_effector arm3 encompass)
    (has_effector arm3 suction)
    (= (arm_height arm3) 3)
    (= (arm_id arm3) 3)
    (empty arm4)
    (not_moving arm4)
    (has_effector arm4 suction)
    (= (arm_height arm4) 1)
    (= (arm_id arm4) 4)
  )
  (:goal (and))

)